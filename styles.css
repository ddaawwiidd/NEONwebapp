:root {
  --bg: #050505;
  --fg: #aaff66;
  --glow-1: rgba(170, 255, 102, 0.7);
  --glow-2: rgba(170, 255, 102, 0.45);
  --glow-3: rgba(170, 255, 102, 0.25);
  --content-width: 1000px;
  --speed-px-per-sec: 140;
  --marquee-gap: 6vw;
}

html, body {
  height: 100%;
  margin: 0;
  background: var(--bg);
  color: var(--fg);
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, Arial, sans-serif;
  overflow: hidden;
}

/* ===== Initial View (Form) ===== */
.wrap { height: 100%; display: grid; place-items: center; }

.panel {
  width: min(840px, 92vw);
  background: #0b0b0f;
  border: 1px solid #1b1b22;
  border-radius: 16px;
  padding: clamp(16px, 4vw, 28px);
  box-shadow: 0 0 0 1px rgba(255,255,255,0.02), 0 8px 40px rgba(0,0,0,0.5);
}

.title { margin: 0 0 12px; font-weight: 600; letter-spacing: 0.2px; color: var(--fg); text-align: center; }

.row { display: grid; gap: 12px; grid-template-columns: 1fr auto; align-items: center; }

input[type="text"] {
  width: 100%;
  font-size: clamp(18px, 2.5vw, 22px);
  padding: 14px 16px;
  border-radius: 12px;
  border: 1px solid #2a2a33;
  outline: none;
  background: #0e0e14;
  color: var(--fg);
  caret-color: var(--fg);
  box-shadow: inset 0 0 0 1px rgba(255,255,255,0.02);
}
input[type="text"]::placeholder { color: var(--fg); opacity: 0.7; }

button {
  font-size: clamp(16px, 2.2vw, 18px);
  padding: 14px 18px;
  border: 0;
  border-radius: 12px;
  background: #0f0f14;
  color: var(--fg);
  cursor: pointer;
  box-shadow: 0 6px 18px rgba(0,0,0,0.45), 0 0 12px var(--glow-3) inset;
  transition: transform 0.08s ease, box-shadow 0.2s ease, filter 0.2s ease;
}

button:hover {
  filter: brightness(1.1);
  box-shadow: 0 8px 24px rgba(0,0,0,0.5), 0 0 16px var(--glow-2) inset;
}

.hint {
  margin-top: 10px;
  text-align: center;
  font-size: 13px;
  color: var(--fg);
  opacity: 0.70;
}

.mode-row {
  margin-top: 10px;
  display: flex;
  gap: 10px;
  justify-content: center;
  align-items: center;
  font-size: 14px;
  color: var(--fg);
}

.hud {
  position: absolute; left: 16px; bottom: 12px; right: 16px;
  display: flex; justify-content: space-between; align-items: center;
  color: var(--fg); font-size: 12px; opacity: 0.85; pointer-events: none;
  letter-spacing: 0.04em; text-shadow: 0 1px 0 rgba(0,0,0,0.6);
}
.hud .pill {
  pointer-events: auto; border: 1px solid #1c2a18; border-radius: 999px; padding: 6px 10px;
  background: #0b1209; color: var(--fg);
}

/* Actions row */
.actions { margin-top: 12px; display: flex; gap: 10px; justify-content: center; }
.actions button {
  font-size: 14px; padding: 10px 14px; border-radius: 10px; border: 0;
  background: #0f0f14; color: var(--fg);
  box-shadow: 0 2px 10px rgba(0,0,0,.35), 0 0 8px var(--glow-2) inset;
}

/* iOS install tip */
.ios-tip {
  margin-top: 10px;
  text-align: center;
  font-size: 13px;
  color: #b6d8b6;
  opacity: 0.95;
}
.ios-tip .ios-share {
  display: inline-block;
  padding: 1px 6px;
  border: 1px solid #2a3a26;
  border-radius: 6px;
  background: #0c160a;
}

/* ===== LED Screen ===== */
.led-screen {
  position: fixed; inset: 0; display: none;
  background: radial-gradient(1200px 800px at 50% 50%,
    color-mix(in srgb, var(--glow-3) 80%, transparent) 0%,
    #070a06 30%,
    #040404 70%);
  cursor: pointer; user-select: none;
}
.led-screen.visible { display: block; }

.ticker-frame { position: absolute; inset: 0; display: grid; place-items: center; }

.marquee {
  position: relative; white-space: nowrap; will-change: transform;
  font-family: 'DotGothic16', monospace;
  text-transform: uppercase; font-size: clamp(42px, 12vw, 180px);
  line-height: 1; letter-spacing: 0.12em; color: var(--fg);
  text-shadow:
    0 0 2px var(--fg), 0 0 4px var(--glow-1), 0 0 10px var(--glow-1),
    0 0 18px var(--glow-2), 0 0 32px var(--glow-2), 0 0 60px var(--glow-3);
  filter: drop-shadow(0 0 2px rgba(170,255,102,0.4));
  padding-inline: 6vw;
}

/* Animation driven by JS via --content-width */
@keyframes scroll {
  0% { transform: translateX(calc(100vw)); }
  100% { transform: translateX(calc(-1 * var(--content-width) - var(--marquee-gap))); }
}


/* LED grid texture */
.led-screen::before {
  content: ""; position: absolute; inset: 0;
  background-image: radial-gradient(
    color-mix(in srgb, var(--fg) 6%, transparent) 1px,
    transparent 1px
  );
  background-size: 10px 10px; opacity: 0.5; pointer-events: none;
}

/* Reduced motion */
@media (prefers-reduced-motion: reduce) {
  :root { --speed-px-per-sec: 90; }
  .marquee { letter-spacing: 0.1em; }
}

/* Display mode dropdown */
.mode-row {
  margin-top: 10px;
  display: flex;
  gap: 10px;
  justify-content: center;
  align-items: center;
  font-size: 14px;
  color: var(--fg);
}
.mode-row select {
  background: #0f0f14;
  color: var(--fg);
  border: 1px solid #1c2a18;
  border-radius: 10px;
  padding: 8px 10px;
}

/* Static mode look (no scrolling) */
.marquee.static {
  animation: none !important;
  letter-spacing: 0.08em;
  padding-inline: 2vw; /* a touch tighter than scrolling */
}

/* ——— Invert message colors ONLY (doesn't affect the UI) ——— */
.led-screen.led-invert {
  /* use current theme foreground as the LED background */
  background: var(--fg) !important;
}

/* Dark message text over the bright background; remove neon halo for contrast */
.led-screen.led-invert #marquee,
.led-screen.led-invert .marquee {
  color: #0a0a0a !important;
  text-shadow: none !important;
}

/* Optional: keep static mode text crisp as well */
.led-screen.led-invert .marquee.static {
  color: #0a0a0a !important;
  text-shadow: none !important;
}

/* Optional tiny polish for the checkbox (can be removed if you have a UI system) */
.invert-toggle input[type="checkbox"] {
  transform: translateY(1px);
}

/* Mode row becomes a wrapping flex container */
.mode-row {
  display: flex;
  flex-wrap: wrap;
  gap: 10px 12px;              /* row gap / column gap */
  align-items: center;
  justify-content: center;
  color: var(--fg);
}

/* Each control (label + input) moves as a unit */
.mode-field {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  /* Grow when there’s room, wrap when there isn’t */
  flex: 1 1 260px;             /* basis ~260px; adjust to taste */
  min-width: 200px;            /* prevents over-squishing */
}

/* Make selects behave well inside the field */
.mode-field select {
  flex: 0 1 auto;
  min-width: 160px;            /* keeps select readable */
  max-width: 100%;
}

/* Keep the checkbox + label aligned */
.mode-field .invert-toggle {
  display: inline-flex;
  align-items: center;
  gap: 8px;
}

/* Small screens: stack one-per-row and let inputs stretch */
@media (max-width: 480px) {
  .mode-field {
    flex-basis: 100%;
    min-width: 0;
    justify-content: center;   /* center each row */
  }
  .mode-field select {
    width: 100%;
    min-width: 0;
  }
}
